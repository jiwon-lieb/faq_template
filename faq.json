[
  {
    "category": "About Me & Work",
    "faqs": [
      {
        "title": "About Me & My Work",
        "slug": "about-me",
        "tags": [
          "technical writing",
          "DevRel",
          "frontend",
          "multilingual",
          "career"
        ],
        "body": "<h1>About Me &amp; My Work</h1>\n<h2>Who Am I?</h2>\n<p>I&#39;m <strong>Jiwon Kwak</strong>, a **technical writer. My background in <strong>API documentation, content creation, content strategy and multilingual communication</strong> makes me a <strong>bridge between technical teams and their audience</strong>.</p>\n<p>I&#39;ve worked on <strong>cutting-edge AI chips, DevRel community projects, and frontend UI development</strong>, ensuring that <strong>complex technologies are easy to understand and use</strong>.</p>\n<h2>My Specialties</h2>\n<ul>\n<li><strong>Technical Writing</strong> â€“ white papers (AI accelerators), style guide, brand manual, SDK/API docs etc.</li>\n<li><strong>Frontend Development</strong> â€“ Interactive documentation, UI/UX design.</li>\n<li><strong>Multilingual Expertise</strong> â€“ English, German, Korean, French.</li>\n</ul>\n<p><strong>Personal Website:</strong> <a href=\"https://jiwonkwak.co\">jiwonkwak.co</a><br><strong>Contact:</strong> <a href=\"mailto:contact@jiwonkwak.co\">contact@jiwonkwak.co</a></p>\n"
      },
      {
        "title": "API Documentation Course",
        "slug": "api-doc-course",
        "tags": [
          "API documentation",
          "education",
          "course"
        ],
        "body": "<h1>MBTI Pep Talk API Documentation</h1>\n<h2>How I Built the MBTI Pep Talk API</h2>\n<p>The MBTI Pep Talk API started as a weekend project to explore API documentation and improve my understanding of backend development. It evolved into a full-fledged API that provides motivational pep talks based on MBTI personality types and moods, supporting multiple languages and structured documentation.</p>\n<h2>How It Started</h2>\n<p>As a technical writer, I wanted to work with APIs beyond just documenting them. So, I decided to build my own API from scratch. At first, I used Netlify Functions for a basic GET request, but soon realized I needed a more scalable and structured backend.</p>\n<h2>Tech Stack &amp; Features</h2>\n<ul>\n<li>Django REST Framework (DRF) + SQL: API development and data base</li>\n<li>CRUD Operations: New pep talks can be added, modified, or deleted</li>\n<li>Multi-language Support (English &amp; Korean): users can toggle between languages</li>\n<li>Deployed on a Cloud Server</li>\n</ul>\n<h2>Writing the API Documentation (GitBook)</h2>\n<p>Once the API was functional, I focused on API documentation to make it developer-friendly. I used GitBook to create a structured and interactive documentation hub.</p>\n<h3>Key Documentation Elements</h3>\n<ul>\n<li>Endpoints &amp; Parameters: Clear request/response formats</li>\n<li>Authentication: API key-based access for modifying content</li>\n<li>Example Requests: Postman examples for testing</li>\n<li>Usage Guidelines: Best practices for integrating the API</li>\n</ul>\n<p>ðŸ“Œ Check out the API Docs here: []</p>\n<h2>Final Takeaways &amp; GitHub Repo</h2>\n<p>This project helped me improve both my backend and technical writing skills. Creating an API from scratch gave me a deeper understanding of the developerâ€™s perspective, making me a better API writer.</p>\n<p>ðŸ”— GitHub Repo (API): []</p>\n<p>If youâ€™re interested in API documentation or want to try writing your own API docs, feel free to fork the repo and experiment!</p>\n"
      },
      {
        "title": "Product Narrative & Content Strategy",
        "slug": "product-narrative",
        "tags": [
          "technical writing",
          "content strategy",
          "product narrative"
        ],
        "body": "<h2>Defining a Clear Narrative for Rebellions</h2>\n<p>One of the biggest challenges at Rebellions was the lack of a unified <strong>product narrative</strong>. With multiple stakeholders creating content independently, inconsistencies arose in tone, messaging, and clarity. To fix this, I led the creation of a <strong>Product Narrative Sheet</strong>, working closely with engineers, marketing, and leadership. </p>\n<h3><strong>What I Did</strong></h3>\n<ul>\n<li>Consolidated existing product messaging to <strong>ensure consistency</strong>.</li>\n<li>Aligned technical, business, and marketing teams under a <strong>single content direction</strong>.</li>\n<li>Introduced a streamlined workflow, reducing content review cycles.</li>\n</ul>\n<h3><strong>Impact</strong></h3>\n<p>âœ… Improved content clarity across marketing materials, white papers, and website copy.<br>âœ… Faster approval process, as all stakeholders aligned on messaging from the start.<br>âœ… A structured <strong>reference document</strong> for engineers and marketing teams to use moving forward.</p>\n"
      },
      {
        "title": "My Technical Writing Philosophy",
        "slug": "tech-writing-style",
        "tags": [
          "technical writing",
          "best practices",
          "writing style"
        ],
        "body": "<h1>My Technical Writing Philosophy and Work Style</h1>\n<h2>My Core Writing Principles</h2>\n<ol>\n<li>** Clarity First** â€“ No unnecessary jargon.</li>\n<li>** UI/UX Matters** â€“ Good documentation is <strong>designed well</strong>.</li>\n<li>** Developer-Centric** â€“ Docs should <strong>solve problems</strong>.</li>\n</ol>\n<h2>Writing Process</h2>\n<table>\n<thead>\n<tr>\n<th>Step</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Research</strong></td>\n<td>Understand the product &amp; audience</td>\n</tr>\n<tr>\n<td><strong>Structure</strong></td>\n<td>Plan clear sections &amp; headings</td>\n</tr>\n<tr>\n<td><strong>Write</strong></td>\n<td>Keep content simple, active voice</td>\n</tr>\n<tr>\n<td><strong>Test &amp; Revise</strong></td>\n<td>Get feedback from engineers &amp; users</td>\n</tr>\n</tbody></table>\n"
      }
    ]
  },
  {
    "category": "Career Journey",
    "faqs": [
      {
        "title": "Career & Learning Journey",
        "slug": "career",
        "tags": [
          "career",
          "tech industry",
          "learning",
          "self-improvement"
        ],
        "body": "<h1>Career &amp; Learning Journey</h1>\n<h2>From Translator to Tech &amp; DevRel</h2>\n<p>My journey started in <strong>interpretation &amp; translation</strong>, but my curiosity led me into <strong>technical writing, frontend development</strong>.</p>\n<p>I transitioned into <strong>AI documentation</strong>, where I worked on <strong>AI accelerators, compilers, and large-scale API docs</strong>. Now, I am delving deeper into different tools and web programming to create engaging, developer-friendly documentation.</p>\n<h2>What Iâ€™m Learning Now</h2>\n<ul>\n<li><strong>JavaScript for frontend enhancements</strong>.</li>\n<li><strong>Static Site Generators</strong></li>\n</ul>\n<h2>Future Goals</h2>\n<ul>\n<li><strong>Create Online Courses</strong> for new tech writers.</li>\n<li><strong>Develop More DevRel Content</strong> (blogs, tutorials, events).</li>\n<li><strong>Expand My Frontend Skills</strong> with React &amp; Next.js.</li>\n</ul>\n<hr>\n<p>ðŸ’¡ <strong>Career Tip:</strong><br><em>&quot;Always stay adaptable. The best skills are the ones that help you evolve.&quot;</em> ðŸš€</p>\n"
      }
    ]
  },
  {
    "category": "Tools & Process",
    "faqs": [
      {
        "title": "Tools, Writing & Development Process",
        "slug": "process",
        "tags": [
          "tools",
          "API documentation",
          "DevRel",
          "workflow"
        ],
        "body": "<h1>My Process: Writing, Development</h1>\n<h2>Writing Process</h2>\n<p>I ensure my documentation follows <strong>three key principles</strong>:</p>\n<ol>\n<li><strong>ðŸ”Ž Clarity</strong> â€“ Simple, structured, and easy to read.</li>\n<li><strong>ðŸ’¡ Developer-Friendly</strong> â€“ Code samples, best practices.</li>\n<li><strong>ðŸŽ¨ Engaging</strong> â€“ Well-designed UI, interactivity.</li>\n</ol>\n<h2>My Developer Workflow</h2>\n<p>I use a <strong>content-first approach</strong> when writing <strong>technical documentation</strong>:</p>\n<ul>\n<li><strong>Step 1:</strong> Research &amp; prototype.</li>\n<li><strong>Step 2:</strong> Write structured documentation.</li>\n<li><strong>Step 3:</strong> Add visuals, UI/UX elements.</li>\n<li><strong>Step 4:</strong> Test &amp; improve through feedback.</li>\n</ul>\n<h2>ðŸ”§ Favorite Tools</h2>\n<table>\n<thead>\n<tr>\n<th>Category</th>\n<th>Tools</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Docs</strong></td>\n<td>Markdown, SSG (Eleventy, Docusaurus), Notion</td>\n</tr>\n<tr>\n<td><strong>Frontend</strong></td>\n<td>TailwindCSS, AlpineJS, Figma</td>\n</tr>\n<tr>\n<td><strong>APIs</strong></td>\n<td>Postman, Swagger, OpenAPI</td>\n</tr>\n</tbody></table>\n"
      }
    ]
  },
  {
    "category": "Projects & Tech",
    "faqs": [
      {
        "title": "My Projects & Tech Stack",
        "slug": "projects",
        "tags": [
          "projects",
          "tech stack",
          "development",
          "JavaScript",
          "GitHub"
        ],
        "body": "<h1>My Projects &amp; Tech Stack</h1>\n<h2>Projects</h2>\n<h3><strong>FAQ Portfolio (This Project)</strong></h3>\n<ul>\n<li><strong>Stack:</strong> TailwindCSS, JavaScript, Eleventy, AlpineJS.</li>\n<li><strong>Purpose:</strong> A dynamic, interactive <strong>FAQ-style portfolio</strong>.</li>\n<li><strong>Features:</strong> Active category states, responsive UI, structured content.</li>\n</ul>\n<h3>MBTI Pep Talk API</h3>\n<ul>\n<li><strong>Stack</strong>: Django REST Framework (DRF), PostgreSQL, Netlify Functions (initial version), Deployed on [API Server]</li>\n<li><strong>Purpose</strong>: Provides personalized pep talks based on MBTI personality type and emotional state. Supports English and Korean and CRUD operations.</li>\n<li><strong>GitHub</strong>: [Insert GitHub Link]</li>\n</ul>\n<h3>MBTI Pep Talk App</h3>\n<ul>\n<li><strong>Stack</strong>: HTML, CSS, JavaScript (Vanilla)</li>\n<li><strong>Purpose</strong>: A simple frontend application that fetches pep talks from the API based on user-selected MBTI type and mood. Features real-time language switching and an interactive UI.</li>\n<li><strong>GitHub</strong>: [Insert GitHub Link]</li>\n</ul>\n<h2><strong>Tech Stack</strong></h2>\n<table>\n<thead>\n<tr>\n<th>Category</th>\n<th>Tools &amp; Languages</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Frontend</strong></td>\n<td>JavaScript, HTML, TailwindCSS</td>\n</tr>\n<tr>\n<td><strong>Docs &amp; APIs</strong></td>\n<td>Markdown, Docusaurus, Postman, Eleventy, Mkdocs</td>\n</tr>\n<tr>\n<td><strong>DevOps</strong></td>\n<td>GitHub Actions, CI/CD Pipelines</td>\n</tr>\n<tr>\n<td><strong>Other</strong></td>\n<td>Postman, Figma</td>\n</tr>\n</tbody></table>\n<p>ðŸ”— <strong>More Projects on GitHub:</strong> <a href=\"https://github.com/jiwon-lieb\">jiwon-lieb</a></p>\n"
      }
    ]
  }
]